@{
    ViewData["Title"] = "Worklog Analysis";
    var startDate = ViewBag.StartDate;
    var endDate = ViewBag.EndDate;
    var teamData = ViewBag.TeamData as List<dynamic>;
    var individualData = ViewBag.IndividualData as List<dynamic>;
    var authors = ViewBag.Authors as List<string>;
    var selectedAuthor = ViewBag.SelectedAuthor as string;
    var qualificationGroups = ViewBag.QualificationGroups as List<QualificationGroup>;
}

<h1>Worklog Analysis</h1>

<form method="get" id="filterForm">
    <label for="startDate">Start Date:</label>
    <input type="date" id="startDate" name="startDate" value="@startDate" onchange="document.getElementById('filterForm').submit();">
    <label for="endDate">End Date:</label>
    <input type="date" id="endDate" name="endDate" value="@endDate" onchange="document.getElementById('filterForm').submit();">
    <button type="submit" style="display: none;">Filter</button>
</form>

<h2>Team Data</h2>
@if (teamData != null && qualificationGroups != null)
{
    @foreach (var group in qualificationGroups)
    {
        var groupData = teamData.Where(td => group.Symbols.Contains((string)td.Qualification));
        if (groupData.Any())
        {
            <h3>@group.GroupName</h3>
            <table>
                <thead>
                    <tr>
                        <th>Qualification</th>
                        <th>Total Hours</th>
                        <th>Percentage</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in groupData)
                    {
                        <tr>
                            <td>@item.Qualification</td>
                            <td>@Math.Round((double)item.TotalHours, 2)</td>
                            <td>@Math.Round((double)item.Percentage, 2) %</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}

<label for="author">Author:</label>
<select id="author" name="author" onchange="document.getElementById('filterForm').submit();" form="filterForm">
    <option value="">-- Select Author --</option>
    @if (authors != null)
    {
        @foreach (var author in authors)
        {
            if (author == selectedAuthor)
            {
                <option value="@author" selected="selected">@author</option>
            }
            else
            {
                <option value="@author">@author</option>
            }
        }
    }
</select>

@if (!string.IsNullOrEmpty(selectedAuthor) && individualData != null && qualificationGroups != null)
{
    <h2>Individual Data for @selectedAuthor</h2>
    @foreach (var group in qualificationGroups)
    {
        var groupData = individualData.Where(id => group.Symbols.Contains((string)id.Qualification));
        if (groupData.Any())
        {
            <h3>@group.GroupName</h3>
            <table>
                <thead>
                    <tr>
                        <th>Qualification</th>
                        <th>Total Hours</th>
                        <th>Percentage</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in groupData)
                    {
                        <tr>
                            <td>@item.Qualification</td>
                            <td>@Math.Round((double)item.TotalHours, 2)</td>
                            <td>@Math.Round((double)item.Percentage, 2) %</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}
