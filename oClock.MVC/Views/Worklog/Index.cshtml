@{
    ViewData["Title"] = "Worklog Analysis";
    var startDate = ViewBag.StartDate;
    var endDate = ViewBag.EndDate;
    var teamData = ViewBag.TeamData as List<dynamic>;
    var individualData = ViewBag.IndividualData as List<dynamic>;
    var authors = ViewBag.Authors as List<string>;
    var selectedAuthor = ViewBag.SelectedAuthor as string;
    var qualificationGroups = ViewBag.QualificationGroups as List<QualificationGroup>;
}

<h1 class="my-4">Worklog Analysis</h1>

<form method="get" id="filterForm" class="form-inline mb-4">
    <div class="form-group mr-2">
        <label for="startDate" class="mr-2">Start Date:</label>
        <input type="date" id="startDate" name="startDate" class="form-control" value="@startDate" onchange="document.getElementById('filterForm').submit();">
    </div>
    <div class="form-group mr-2">
        <label for="endDate" class="mr-2">End Date:</label>
        <input type="date" id="endDate" name="endDate" class="form-control" value="@endDate" onchange="document.getElementById('filterForm').submit();">
    </div>
    <button type="submit" class="btn btn-primary" style="display: none;">Filter</button>
</form>

<div class="row">
    <div class="col-md-6">
        <h2>Team Data</h2>
        @if (teamData != null && qualificationGroups != null)
        {
            @foreach (var group in qualificationGroups)
            {
                var groupData = teamData.Where(td => group.Symbols.Contains((string)td.Qualification));
                if (groupData.Any())
                {
                    <h3 class="mt-4">@group.GroupName</h3>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Qualification</th>
                                    <th>Total Hours</th>
                                    <th>Percentage</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in groupData)
                                {
                                    <tr>
                                        <td>@item.Qualification</td>
                                        <td>@Math.Round((double)item.TotalHours, 2)</td>
                                        <td>@Math.Round((double)item.Percentage, 2) %</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        }
    </div>

    <div class="col-md-6">
        <div class="form-group mt-4">
            <label for="author" class="mr-2">Employee:</label>
            <select id="author" name="author" class="form-control" onchange="document.getElementById('filterForm').submit();" form="filterForm">
                <option value="">-- Select employee --</option>
                @if (authors != null)
                {
                    @foreach (var author in authors)
                    {
                        if (author == selectedAuthor)
                        {
                            <option value="@author" selected="selected">@author</option>
                        }
                        else
                        {
                            <option value="@author">@author</option>
                        }
                    }
                }
            </select>
        </div>

        @if (!string.IsNullOrEmpty(selectedAuthor) && individualData != null && qualificationGroups != null)
        {
            <h2 class="mt-4">Individual Data for @selectedAuthor</h2>
            @foreach (var group in qualificationGroups)
            {
                var groupData = individualData.Where(id => group.Symbols.Contains((string)id.Qualification));
                if (groupData.Any())
                {
                    <h3 class="mt-4">@group.GroupName</h3>
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Qualification</th>
                                    <th>Total Hours</th>
                                    <th>Percentage</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in groupData)
                                {
                                    <tr>
                                        <td>@item.Qualification</td>
                                        <td>@Math.Round((double)item.TotalHours, 2)</td>
                                        <td>@Math.Round((double)item.Percentage, 2) %</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            }
        }
    </div>
</div>
